#
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ['main']
  workflow_dispatch:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: modbus2mqtt

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: modbus2mqtt/modbus2mqtt.dev
          path: .
      - name: Wait for other workflow run or continue
        id: init
        run: |
          gh auth status
          owner=""
          if [ "${{github.event.act.owner}}" != '' ]
          then
            owner="-o ${{github.event.act.owner}}"
          else
            owner="-o ${{github.repository_owner}}"
          fi
          echo "owner=$owner" >> "$GITHUB_OUTPUT"
          bin/pulls.py $owner execorwait --noexec "${{github.event.push.base.repo.name}}:${{github.event.number}}" "${{github.event.push.body}}" merge >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  addon-docker-publish:
    runs-on: ubuntu-latest
    needs: init
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: modbus2mqtt/modbus2mqtt.dev
          path: .
      - uses: actions/checkout@v4
        with:
          repository: modbus2mqtt/server
          path: server
      - uses: actions/checkout@v4
        with:
          repository: modbus2mqtt/hassio-addon-repository
          path: hassio-addon-repository
          ref: refs/heads/dev
          #token: ${{ secrets.PAT }}
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20.x
      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Prepare Addon Directory
        id: prepareAddonDirectory
        run: |
          ./bin/releaseAddon.py --ref ${{github.ref}} >>$GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkin hassio-addon-repository
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: ./hassio-addon-repository
          tagging_message: ${{env.TAG_NAME}}
          commit_message: ${{env.TAG_NAME}}
      - name: Publish
        uses: home-assistant/builder@master 
        with:
          args: |
            --all \
            --target ./hassio-addon-repository/modbus2mqtt.latest \
            --version ${{env.TAG_NAME}} \
            --image modbus2mqtt.latest-{arch} \
            --docker-hub modbus2mqtt
